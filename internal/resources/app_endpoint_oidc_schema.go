package resources

import (
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

func AppEndpointOidcProviderSchema() schema.Schema {
	return schema.Schema{
		MarkdownDescription: "App Endpoint OpenID Connect Provider Resource",
		Attributes: map[string]schema.Attribute{
			"organization_id":   WithDescription(stringAttribute([]string{required, requiresReplace}, validator.String(stringvalidator.LengthAtLeast(1))), "The GUID4 ID of the Capella organization."),
			"project_id":        WithDescription(stringAttribute([]string{required, requiresReplace}, validator.String(stringvalidator.LengthAtLeast(1))), "The GUID4 ID of the Capella project."),
			"cluster_id":        WithDescription(stringAttribute([]string{required, requiresReplace}, validator.String(stringvalidator.LengthAtLeast(1))), "The GUID4 ID of the Capella cluster."),
			"app_service_id":    WithDescription(stringAttribute([]string{required, requiresReplace}, validator.String(stringvalidator.LengthAtLeast(1))), "The GUID4 ID of the Capella App Service."),
			"app_endpoint_name": WithDescription(stringAttribute([]string{required, requiresReplace}, validator.String(stringvalidator.LengthAtLeast(1))), "The name of the App Endpoint."),
			"issuer":            WithDescription(stringAttribute([]string{required}), "The URL for the OpenID Connect issuer.."),
			"register":          WithDescription(boolAttribute(optional, computed), "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."),
			"client_id":         WithDescription(stringAttribute([]string{required}), "The OpenID Connect provider client ID."),
			"user_prefix":       WithDescription(stringAttribute([]string{optional, computed}), "Username prefix for all users created for this provider."),
			"discovery_url":     WithDescription(stringAttribute([]string{optional, computed}), "The URL for the non-standard discovery endpoint."),
			"username_claim":    WithDescription(stringAttribute([]string{optional, computed}), "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."),
			"roles_claim":       WithDescription(stringAttribute([]string{optional, computed}), "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles. The value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error."),
			"provider_id":       WithDescription(stringAttribute([]string{computed}), "The GUID4 ID of this OpenID Connect provider. Generated by the backend on creation."),
			"is_default":        WithDescription(boolAttribute(computed), "Indicates whether this is the default OpenID Connect provider for this App Endpoint."),
		},
	}
}
